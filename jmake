NAME="Axiom"
FOLDER="java"

# Parse optional arguments for file and folder
parse_args() {
    # If second argument is provided, use it as NAME
    if [ -n "$1" ]; then
        NAME="$1"
    fi
    # If third argument is provided, use it as FOLDER
    if [ -n "$2" ]; then
        FOLDER="$2"
    fi
}

compile() {
    echo "Compiling ${NAME}.java into ${FOLDER}/..."
    if [ ! -f "${NAME}.java" ]; then
        echo "Error: ${NAME}.java not found!"
        exit 1
    fi
    if ! javac -d ${FOLDER} ${NAME}.java; then
        echo "Error: Compilation failed!"
        exit 1
    fi
    echo "Compilation successful."
}

run() { 
    # Check if -j flag is set to run JAR
    if [ "$USE_JAR" = true ]; then
        echo "Running ${NAME}.jar..."
        if [ ! -f "./${NAME}.jar" ]; then
            echo "Error: ${NAME}.jar not found!"
            exit 1
        fi
        if ! java -jar ./${NAME}.jar; then
            echo "Error: Execution failed!"
            exit 1
        fi
    else
        echo "Running ${NAME} from ${FOLDER}/..."
        if [ ! -d "${FOLDER}" ]; then
            echo "Error: ${FOLDER} directory not found!"
            exit 1
        fi
        if ! java -cp ${FOLDER} ${NAME}; then
            echo "Error: Execution failed!"
            exit 1
        fi
    fi
}

clean() { 
    echo "Cleaning ${FOLDER}/..."
    if [ ! -d "${FOLDER}" ]; then
        echo "Warning: ${FOLDER} directory not found. Nothing to clean."
    else
        find ${FOLDER} -name "*.class" -type f -delete
        rm -rf ${FOLDER}/lib
        echo "Cleaned up compiled class files."
    fi
    if [ -f "./${NAME}.jar" ]; then
        rm ./${NAME}.jar
        echo "Removed ${NAME}.jar."
    fi
}

all() { 
    compile
    run
}

compile-jar() {
    echo "Creating JAR file ${NAME}.jar..."
    if [ ! -d "${FOLDER}" ]; then
        echo "Error: ${FOLDER} directory not found! Compile first."
        exit 1
    fi
    if ! jar cfe ${NAME}.jar ${NAME} -C ${FOLDER} .; then
        echo "Error: JAR creation failed!"
        exit 1
    fi
    echo "JAR file ${NAME}.jar created successfully."
}

help() { 
    echo "Usage: ${0##*/} [command] [-j] [file] [folder]"
    echo ""
    echo "Commands:"
    echo "  compile   Compile the Java source files"
    echo "  run       Run the main Java class"
    echo "  clean     Remove compiled class files"
    echo "  all       Compile and run the Java program"
    echo "  help      Display this help message"
    echo "  jar       Create a JAR file from the compiled classes"
    echo ""
    echo "Options:"
    echo "  -j        Run the JAR file instead of compiled classes (use with 'run' command)"
    echo ""
    echo "Optional Arguments:"
    echo "  file      Name of the main Java file (default: Axiom)"
    echo "  folder    Output folder for compiled classes (default: java)"
}

# Default action: compile
if [ $# -eq 0 ]; then
    compile
else

    # Parse the command
    COMMAND=$1
    shift  # Remove first argument (command)
    
    # Check for -j flag
    USE_JAR=false
    if [ "$1" = "-j" ]; then
        USE_JAR=true
        shift  # Remove -j flag
    fi
    
    # Parse optional file and folder arguments
    parse_args "$@"
    
    case $COMMAND in
        compile) compile ;;
        run) run ;;
        clean) clean ;;
        all) all ;;
        help) help ;;
        jar) compile-jar ;;
        *) echo "Unknown command: $COMMAND" ; help ;;
    esac
fi